import Head from 'next/head'
import Link from 'next/link';
import Image from 'next/image';
import styles from '../styles/Home.module.scss'
import Top from '../components/Top';
import Header from '../components/Header';

import { Canvas, useFrame } from '@react-three/fiber';
import { ScrollControls, Scroll } from '@react-three/drei';
import { useRef, useState } from 'react'

import { client } from "../libs/client";



export default function Home({articles}) {

  const dumping = 2

  const Box = (props) => {
    const ref = useRef()
    const [clicked, setClicked] = useState(false)
    const [hoverd, setHoverd] = useState(false)
  
    //現在の位置を取得して　フレームごとのアクションを決める
    useFrame(() => (ref.current.rotation.x += 0.01))
  
    return(
      <mesh 
      ref={ref} 
      {...props} 
      onClick={() => { setClicked(!clicked)} }
      onPointerOver={() => { setHoverd(true)} } //マウスhover時
      onPointerOut={() => { setHoverd(false)} } //マウスleave時
      scale={clicked ? 2 : 1} >
      <boxGeometry args={[1.5,1.5,1.5]} />
      <meshStandardMaterial color={hoverd ? 'red' : 'orange'} />
     </mesh>
    )
  }

  const Sphere = (props) => {

    const ref = useRef()
  
    //現在の位置を取得して　フレームごとのアクションを決める
    useFrame(() => (ref.current.rotation.x += 0.01))
  
   return (
    <mesh  ref={ref}   {...props}   visible userData={{ hello: 'world' }}>
  <sphereGeometry args={[1, 16, 16]} />
  <meshStandardMaterial color="#cccccc" transparent />
</mesh>
   )
  }




  return (

      <>
      <Head>
        <title>Yoshifumi Mizukawa</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header/>
      <div className={styles.container}>
      <Canvas>
        <ScrollControls pages={2} damping={dumping} horizontal={true} >
          <Scroll>
            <ambientLight intensity={0.5} />
            <spotLight position={[5,5,5]} />
            <Box position={[-5,0,-1]} color={'red'} colorHoverd={'orange'} />
            <Box position={[-2.5,0,-2]} />
            <Sphere position={[0.5,0,-3]} />
            {/* <Sphere /> */}
          </Scroll>

          <Scroll html>
            <Top />
          </Scroll>

          <Scroll html>
          <div style={{position: 'absolute', left: '100vw'}}>
            <ul>
              {articles.map((article) => (
                <li key={article.id}>
                  <img src={`${article.mainVisual.url}`} alt={'eyecatch'} />
                  <Link href={`/articles/${article.id}`}>
                    <a>{article.title}</a>
                  </Link>
                </li>
              ))}
            </ul>
    </div>
          </Scroll>


        </ScrollControls>
      </Canvas>
      </div>
      </>
  


  )
}

export const getServerSideProps = async () => {
  const data = await client.get({ endpoint: 'articles' });

  return {
    props: {
      articles: data.contents,
    },
  };
};
